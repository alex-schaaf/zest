generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  email        String   @unique
  passwordHash String

  settings   Settings   @relation(fields: [settingsId], references: [id], onDelete: Cascade)
  settingsId String        @unique
  activities Activity[]

  @@map("users")
}

model Settings {
  id                   String      @id @default(uuid())
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  stravaClientId       String?
  stravaClientSecret   String?
  stravaAccessToken    String?
  stravaRefreshToken   String?
  stravaTokenExpiresAt Int?

  user User?

  @@map("settings")
}

model Activity {
  id               BigInt   @id
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  type             String
  distance         Float
  time             Float
  speed            Float
  elevationGain    Float
  averageHeartrate Float?
  startDate        DateTime
  originService    String
  active           Boolean  @default(true) // if false, the activity is considered deleted
  data             Bytes // the complete activity JSON returned from the StravaAPI

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@map("activities")
}
